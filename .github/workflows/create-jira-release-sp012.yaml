name: Create Github Release

run-name: ${{ github.event.sender.login }} executes 'create_release' action for ${{ inputs.jira_key }}

on:
  workflow_dispatch:
    inputs:
      jira_key:
        description: 'Jira Project Key'
        required: true
        default: 'KDOG'
        type: string
      release_version:
        description: 'Release Version'
        required: true
        default: ""
        type: string
      release_env:
        description: 'Release Environment'
        required: false
        default: ""
        type: string


jobs:
  initial_setting:
    outputs:
      repo: ${{ steps.set_env.outputs.repo }}
      branch: ${{ steps.set_env.outputs.branch }}
      s3prefix: ${{ steps.set_env.outputs.s3prefix }}
    name: Initial Setting
    runs-on: ubuntu-latest
    steps:
      - name: Repository List
        id: set_env
        run: |
          if [ ${{ inputs.jira_key }}  == "RMR" ]; then
            if grep -q "sh_gw" <<<"${{ inputs.release_version }}"; then
              repo=saleshub-gateway
              branch=release
              s3prefix=gateway
            elif grep -q "sh_be" <<<"${{ inputs.release_version }}"; then
              repo=saleshub-backend
              branch=release
              s3prefix=backend
            elif grep -q "sh_fe" <<<"${{ inputs.release_version }}"; then
              repo=saleshub-frontend
              branch=release
              s3prefix=frontend
            elif grep -q "sh_li" <<<"${{ inputs.release_version }}"; then
              repo=license-server
              branch=release
              s3prefix=license
            elif grep -q "sh_pa" <<<"${{ inputs.release_version }}"; then
              repo=saleshub-payment
              branch=release
              s3prefix=payment
            fi
          fi
          
          echo "repo=$repo" >> $GITHUB_OUTPUT
          echo "branch=$branch" >> $GITHUB_OUTPUT
          echo "s3prefix=$s3prefix" >> $GITHUB_OUTPUT
  create-release:
    name: Create release
    needs: [initial_setting]
    environment: main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: backend-sw-development-team4/${{ needs.initial_setting.outputs.repo }}
          ref: refs/heads/${{ needs.initial_setting.outputs.branch }}
          token: ${{ secrets.GH_MANAGEPACKAGE_TOKEN }}


      - name: Create Github Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MANAGEPACKAGE_TOKEN }}
        with:
          tag_name: ${{ inputs.release_version }}
          release_name: ${{ inputs.release_version }}
          repo: ${{ needs.initial_setting.outputs.repo }}
          commitish: ${{ needs.initial_setting.outputs.branch }}
          body: |
            ü§ñ This release was created by ${{ github.event.sender.login }}.
            - More information about this release can be found in Jira Release. üîç
            - Jira Release should have a release like this version. If the same version is not there, contact DevOps. üìû
            - [Jira Release Link](https://hanwhavision.atlassian.net/projects/${{ inputs.jira_key }}?selectedItem=com.atlassian.jira.jira-projects-plugin%3Arelease-page)

      - name: Github Release Result
        run: |
          echo "üîç Check the release results"
          echo "üîó Github Release Link : https://github.com/cloud-development-team/${{ needs.initial_setting.outputs.repo }}/releases/tag/${{ inputs.release_version }}"

  sp012-backend:
    if: ${{ needs.initial_setting.outputs.s3prefix != 'frontend' }}
    needs: [initial_setting, create-release]
    name: Backend Module Deploy
    uses: ./.github/workflows/build-and-push-image-to-s3-sp012.yaml
    with:
      working_dir: ./
      release_version: ${{ inputs.release_version }}
      release_env: ${{ inputs.release_env }}
      release_repo: ${{ needs.initial_setting.outputs.repo }}
      qa_s3_bucket: sp012-build-q-ue1
      prod_s3_bucket: sp012-build-p-ue1
      dev_s3_bucket: sp012-build-d-an2-001
      qa_aws_account: '060636281042'
      prod_aws_account: '497796310523'
      dev_aws_account: '540528117317'
      s3_prefix: ${{ needs.initial_setting.outputs.s3prefix }}
    secrets: inherit
  
  sp012-frontend:
    if: ${{ needs.initial_setting.outputs.s3prefix == 'frontend' }}
    needs: [initial_setting, create-release]
    name: Front Module Deploy
    uses: ./.github/workflows/build-and-push-view-to-s3-sp012.yaml
    with:
      working_dir: ./
      release_version: ${{ inputs.release_version }}
      release_env: ${{ inputs.release_env }}
      release_repo: ${{ needs.initial_setting.outputs.repo }}
      qa_s3_bucket: sp012-build-q-ue1
      qa_front_s3_bucket: sp012-frontend-q-ue1
      prod_s3_bucket: sp012-build-p-ue1
      prod_front_s3_bucket: sp012-frontend-p-ue1
      dev_front_s3_bucket: sp012-frontend-d-an2-001
      dev_s3_bucket: sp012-build-d-an2-001
      qa_aws_account: '060636281042'
      prod_aws_account: '497796310523'
      dev_aws_account: '540528117317'
    secrets: inherit





    
    