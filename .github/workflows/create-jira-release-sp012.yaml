name: Create Github Release

run-name: 'create_release: ${{ inputs.jira_key }}-${{ inputs.release_version }} by ${{ github.event.sender.login }}'

on:
  workflow_dispatch:
    inputs:
      jira_key:
        description: 'Jira Project Key'
        required: true
        default: 'KDOG'
        type: string
      release_version:
        description: 'Release Version'
        required: true
        default: ""
        type: string
      release_env:
        description: 'Release Environment'
        required: false
        default: ""
        type: string


jobs:
  initial_setting:
    outputs:
      branch: ${{ steps.set_env.outputs.branch }}
      deploy_env: ${{ steps.set_env.outputs.deploy_env }}
      frontend: ${{ steps.set_env.outputs.frontend }}
      backend: ${{ steps.set_env.outputs.backend }}
      payment: ${{ steps.set_env.outputs.payment }}
      license: ${{ steps.set_env.outputs.license }}
      gateway: ${{ steps.set_env.outputs.gateway }}
    name: Initial Setting
    runs-on: ubuntu-latest
    steps:
      - name: Repository List
        id: set_env
        run: |
          if [ ${{ inputs.jira_key }}  == "RMR" ]; then
            if grep -q "PROD" <<<"${{ inputs.release_env }}"; then
              deploy_env=prod
              branch=release
            elif grep -q "QA" <<<"${{ inputs.release_env }}"; then
              deploy_env=qa
              branch=release
            else
              deploy_env=hotfix
              branch=release
            fi
          fi

          if grep -q "frotend" <<<"${{ inputs.release_env }}"; then
            frontend=deploy

          elif grep -q "backend" <<<"${{ inputs.release_env }}"; then
            backend=deploy
          
          elif grep -q "payment" <<<"${{ inputs.release_env }}"; then 
            payment=deploy

          elif grep -q "license" <<<"${{ inputs.release_env }}"; then
            license=deploy

          elif grep -q "gateway" <<<"${{ inputs.release_env }}"; then
            gateway=deploy

          elif grep -q "frontend" <<<"${{ inputs.release_env }}"; then
            frontend=deploy
          fi

        
          echo "::set-output name=branch::$branch"
          echo "::set-output name=deploy_env::$deploy_env"
          echo "::set-output name=frontend::$frontend"
          echo "::set-output name=backend::$backend"
          echo "::set-output name=payment::$payment"
          echo "::set-output name=license::$license"
          echo "::set-output name=gateway::$gateway"
  create-release:
    name: Create release
    needs: [initial_setting]
    environment: main
    runs-on: ubuntu-latest
    outputs:
      repo: ${{ steps.determine-repos.outputs.repo }}
    strategy:
      matrix:
        env: ['license','gateway','backend','frontend','payment' ]
    steps:
      - name: Determine repository names
        id: determine-repos
        run: |
          if [ ${{ matrix.env }} == "gateway" ]; then
            if [ ${{ needs.initial_setting.outputs.gateway }}  == "deploy" ]; then
              repo=saleshub-gateway
            fi
          elif [ ${{ matrix.env }} == "backend" ]; then
            if [ ${{ needs.initial_setting.outputs.backend }}  == "deploy" ]; then
              repo=saleshub-backend
            fi
          elif [ ${{ matrix.env }} == "license" ]; then
            if [ ${{ needs.initial_setting.outputs.license }}  == "deploy" ]; then
              repo=license-server
            fi
          elif [ ${{ matrix.env }} == "payment" ]; then
            if [ ${{ needs.initial_setting.outputs.payment }}  == "deploy" ]; then
              repo=saleshub-payment
            fi
          elif [ ${{ matrix.env }} == "frontend" ]; then
            if [ ${{ needs.initial_setting.outputs.frontend }}  == "deploy" ]; then
              repo=saleshub-frontend
            fi
          fi
          echo "repo=$repo" >> $GITHUB_OUTPUT

      - name: Checkout current repository
        if: ${{ steps.determine-repos.outputs.repo != '' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: backend-sw-development-team4/${{ steps.determine-repos.outputs.repo }}
          ref: refs/heads/${{ needs.initial_setting.outputs.branch }}
          token: ${{ secrets.GH_MANAGEPACKAGE_TOKEN }}


      - name: Create Github Release
        if: ${{ steps.determine-repos.outputs.repo != '' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MANAGEPACKAGE_TOKEN }}
        with:
          tag_name: ${{ inputs.release_version }}
          release_name: ${{ inputs.release_version }}
          repo: ${{ steps.determine-repos.outputs.repo }}
          commitish: ${{ needs.initial_setting.outputs.branch }}
          body: |
            ü§ñ This release was created by ${{ github.event.sender.login }}.
            - More information about this release can be found in Jira Release. üîç
            - Jira Release should have a release like this version. If the same version is not there, contact DevOps. üìû
            - [Jira Release Link](https://hanwhavision.atlassian.net/projects/${{ inputs.jira_key }}?selectedItem=com.atlassian.jira.jira-projects-plugin%3Arelease-page)

      - name: Github Release Result
        if: ${{ steps.determine-repos.outputs.repo != '' }}
        run: |
          echo "üîç Check the release results"
          echo "üîó Github Release Link : https://github.com/cloud-development-team/${{ needs.initial_setting.outputs.repo }}/releases/tag/${{ inputs.release_version }}"
  
  sp012-gateway:
    if: ${{ needs.initial_setting.outputs.gateway == 'deploy' }}
    needs: [initial_setting, create-release]
    name: Gateway Module Deploy
    uses: ./.github/workflows/build-and-push-image-to-s3-sp012.yaml
    with:
      working_dir: ./
      release_version: ${{ inputs.release_version }}
      release_env: ${{ needs.initial_setting.outputs.deploy_env }}
      release_repo: saleshub-gateway
      qa_s3_bucket: sp012-build-q-ue1
      prod_s3_bucket: sp012-build-p-ue1
      dev_s3_bucket: sp012-build-d-an2-001
      qa_aws_account: '060636281042'
      prod_aws_account: '497796310523'
      dev_aws_account: '540528117317'
      s3_prefix: gateway
    secrets: inherit

  sp012-backend:
    if: ${{ needs.initial_setting.outputs.backend == 'deploy' }}
    needs: [initial_setting, create-release]
    name: Backend Module Deploy
    uses: ./.github/workflows/build-and-push-image-to-s3-sp012.yaml
    with:
      working_dir: ./
      release_version: ${{ inputs.release_version }}
      release_env: ${{ needs.initial_setting.outputs.deploy_env }}
      release_repo: saleshub-backend
      qa_s3_bucket: sp012-build-q-ue1
      prod_s3_bucket: sp012-build-p-ue1
      dev_s3_bucket: sp012-build-d-an2-001
      qa_aws_account: '060636281042'
      prod_aws_account: '497796310523'
      dev_aws_account: '540528117317'
      s3_prefix: backend
    secrets: inherit

  sp012-license:
    if: ${{ needs.initial_setting.outputs.license == 'deploy' }}
    needs: [initial_setting, create-release]
    name: License Module Deploy
    uses: ./.github/workflows/build-and-push-image-to-s3-sp012.yaml
    with:
      working_dir: ./
      release_version: ${{ inputs.release_version }}
      release_env: ${{ needs.initial_setting.outputs.deploy_env }}
      release_repo: license-server
      qa_s3_bucket: sp012-build-q-ue1
      prod_s3_bucket: sp012-build-p-ue1
      dev_s3_bucket: sp012-build-d-an2-001
      qa_aws_account: '060636281042'
      prod_aws_account: '497796310523'
      dev_aws_account: '540528117317'
      s3_prefix: license
    secrets: inherit

  sp012-payment:
    if: ${{ needs.initial_setting.outputs.payment == 'deploy' }}
    needs: [initial_setting, create-release]
    name: Payment Module Deploy
    uses: ./.github/workflows/build-and-push-image-to-s3-sp012.yaml
    with:
      working_dir: ./
      release_version: ${{ inputs.release_version }}
      release_env: ${{ needs.initial_setting.outputs.deploy_env }}
      release_repo: saleshub-payment
      qa_s3_bucket: sp012-build-q-ue1
      prod_s3_bucket: sp012-build-p-ue1
      dev_s3_bucket: sp012-build-d-an2-001
      qa_aws_account: '060636281042'
      prod_aws_account: '497796310523'
      dev_aws_account: '540528117317'
      s3_prefix: payment
    secrets: inherit

  sp012-frontend:
    if: ${{ needs.initial_setting.outputs.frontend == 'deploy' }}
    needs: [initial_setting, create-release]
    name: Frontend Module Deploy
    uses: ./.github/workflows/build-and-push-view-to-s3-sp012.yaml
    with:
      working_dir: ./
      release_version: ${{ inputs.release_version }}
      release_env: ${{ needs.initial_setting.outputs.deploy_env }}
      release_repo: saleshub-frontend
      qa_s3_bucket: sp012-build-q-ue1
      qa_front_s3_bucket: sp012-frontend-q-ue1
      prod_s3_bucket: sp012-build-p-ue1
      prod_front_s3_bucket: sp012-frontend-p-ue1
      dev_front_s3_bucket: sp012-frontend-d-an2-001
      dev_s3_bucket: sp012-build-d-an2-001
      qa_aws_account: '060636281042'
      prod_aws_account: '497796310523'
      dev_aws_account: '540528117317'
      s3_prefix: frontend
      qa_cloudfront_distribution_id: E3H96P9LID60CL
      prod_cloudfront_distribution_id: EJGVL5C56392T
    secrets: inherit