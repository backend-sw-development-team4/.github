name: Create Github Release

run-name: 'create_release: ${{ inputs.jira_key }}-${{ inputs.release_version }} by ${{ github.event.sender.login }}'

on:
  workflow_dispatch:
    inputs:
      jira_key:
        description: 'Jira Project Key'
        required: true
        default: 'KDOG'
        type: string
      release_version:
        description: 'Release Version'
        required: true
        default: ""
        type: string
      release_env:
        description: 'Release Environment'
        required: false
        default: ""
        type: string


jobs:
  initial_setting:
    outputs:
      branch: ${{ steps.set_env.outputs.branch }}
      deploy_env: ${{ steps.set_env.outputs.deploy_env }}

    name: Initial Setting
    runs-on: ubuntu-latest
    steps:
      - name: Repository List
        id: set_env
        run: |
          if [ ${{ inputs.jira_key }}  == "RMR" ]; then
            if grep -q "PROD" <<<"${{ inputs.release_env }}"; then
              deploy_env=prod
            else 
              deploy_env=qa
            fi

            valid_envs="license gateway backend frontend payment"
            filtered_envs=$(echo "${{ inputs.release_env }}" | tr ',' ' ' | grep -Eo "($valid_envs)" | tr '\n' ',' | sed 's/,$//')
            echo "Filtered environments: $filtered_envs"
            echo "env_list=$filtered_envs" >> $GITHUB_OUTPUT"
          fi
          echo "branch=$branch" >> $GITHUB_OUTPUT
          echo "deploy=$deploy_env" >> $GITHUB_OUTPUT
          
  create-release:
    name: Create release
    needs: [initial_setting]
    environment: main
    runs-on: ubuntu-latest
     strategy:
      matrix:
        env: [${{ needs.initial_setting.outputs.env_list }}]
    steps:
      - name: Determine repository names
        id: determine-repos
        run: |
          if [ ${{ matrix.env }} == "gateway" ]; then
            echo "repo=saleshub-gateway"
          fi
          echo "repo=$repo" >> $GITHUB_OUTPUT

      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: backend-sw-development-team4/${{ steps.determine-repos.outputs.repo }}
          ref: refs/heads/${{ needs.initial_setting.outputs.branch }}
          token: ${{ secrets.GH_MANAGEPACKAGE_TOKEN }}


      - name: Create Github Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MANAGEPACKAGE_TOKEN }}
        with:
          tag_name: ${{ inputs.release_version }}
          release_name: ${{ inputs.release_version }}
          repo: ${{ steps.determine-repos.outputs.repo }}
          commitish: ${{ needs.initial_setting.outputs.branch }}
          body: |
            🤖 This release was created by ${{ github.event.sender.login }}.
            - More information about this release can be found in Jira Release. 🔍
            - Jira Release should have a release like this version. If the same version is not there, contact DevOps. 📞
            - [Jira Release Link](https://hanwhavision.atlassian.net/projects/${{ inputs.jira_key }}?selectedItem=com.atlassian.jira.jira-projects-plugin%3Arelease-page)

      - name: Github Release Result
        run: |
          echo "🔍 Check the release results"
          echo "🔗 Github Release Link : https://github.com/cloud-development-team/${{ needs.initial_setting.outputs.repo }}/releases/tag/${{ inputs.release_version }}"