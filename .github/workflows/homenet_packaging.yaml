name: Build deb Installer

on:
  workflow_call:
    inputs:
      branch:
        required: true
        description: "branch name to build from"
        default: "develop"
        type: string
      image_tag:
        required: true
        description: "Additional tag for cretead image"
        type: string
    secrets:
      GH_MANAGEPACKAGE_TOKEN:
        required: true
      AWS_ACCOUNT_ID:
        required: true
        description: "AWS Account ID to deploy the package"


jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: backend-sw-development-team4/mopl-homenet-frontend
          path: ./frontend
          ref: ${{ inputs.branch }}
          token: ${{ secrets.GH_MANAGEPACKAGE_TOKEN }}

      - name: Docker build frontend image
        run: |
          cd frontend
          docker build -t mopl-homenet-frontend:${{ inputs.image_tag }} --build-arg NPM_TOKEN=${{ secrets.GH_MANAGEPACKAGE_TOKEN }} .
          docker tag mopl-homenet-frontend:${{ inputs.image_tag }} mopl-homenet-frontend:latest
          docker save mopl-homenet-frontend:${{ inputs.image_tag }} -o ../frontend.tar

      - name: Upload frontend image
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: frontend.tar


  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::339712975332:role/HV-platform-tf-automation
          role-session-name: githubactions
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Docker build frontend image
        run: |
          docker pull 339712975332.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-mopl015-homenet-an2:${{ inputs.image_tag }}
          docker tag 339712975332.dkr.ecr.ap-northeast-2.amazonaws.com/ecr-mopl015-homenet-an2:${{ inputs.image_tag }} mopl-homenet-backend:${{ inputs.image_tag }}
          docker save mopl-homenet-backend:${{ inputs.image_tag }} -o backend.tar

      - name: Upload backend image
        uses: actions/upload-artifact@v4
        with:
          name: backend
          path: backend.tar

  make-deb:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: Checkout packaging files
        uses: actions/checkout@v4

      - name: Download backend image
        uses: actions/download-artifact@v4
        with:
          name: backend
          path: shells/mopl-homenet/tmp/

      - name: Download frontend image
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: shells/mopl-homenet/tmp/

      - name: Set permissions
        run: |
          chmod 755 shells/mopl-homenet/DEBIAN/postinst
          chmod 755 shells/mopl-homenet/DEBIAN/postrm
          chmod +x shells/mopl-homenet/usr/bin/*

      - name: Replace image tag in docker-compose.yaml
        run: |
          sed -i "s|image: mopl-homenet-backend:latest|image: mopl-homenet-backend:${{ inputs.image_tag }}|" shells/mopl-homenet/tmp/docker-compose.yaml

      - name: Build .deb package
        run: |
          dpkg-deb --build shells/mopl-homenet mopl-homenet-${{ inputs.image_tag }}.deb

      # Login To HVC_Admin_Automation for Deploy
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::339712975332:role/HV-platform-tf-automation
          role-session-name: githubactions
          aws-region: ap-northeast-2

      # Assume to Each Account as AWSControlTowerExecution
      - name: Push build artifact to S3 Bucket and invalidation CloudFront
        run: |
          # Assume Role using an Automation Key
          AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
          identity=$(aws sts assume-role --role-arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/AWSTerraformAssumeRole --role-session-name AWS)
          export AWS_ACCESS_KEY_ID=$(echo "$identity" | grep -o '"AccessKeyId": "[^"]*' | awk -F'"' '{print $4}')
          export AWS_SECRET_ACCESS_KEY=$(echo "$identity" | grep -o '"SecretAccessKey": "[^"]*' | awk -F'"' '{print $4}')
          export AWS_SESSION_TOKEN=$(echo "$identity" | grep -o '"SessionToken": "[^"]*' | awk -F'"' '{print $4}')
          
          # Upload qa version file to S3 bucket.
          if [ "${{ inputs.branch }}" = "release" ]; then
            aws s3 cp mopl-homenet-${{ inputs.image_tag }}.deb s3://mopl015-firmware-p-an2/homenet-${{ inputs.image_tag }}.deb --region ap-northeast-2
          elif [ "${{ inputs.branch }}" = "develop" ]; then
            aws s3 cp mopl-homenet-${{ inputs.image_tag }}.deb s3://mopl015-firmware-d-an2/homenet-${{ inputs.image_tag }}.deb --region ap-northeast-2
          else
            echo "Error: unsupported branch '${{ inputs.branch }}', only 'release' or 'develop' are allowed."
            exit 1
          fi


