name: test

run-name: test action

on:
  workflow_dispatch:
    inputs:
      jira_key:
        description: 'Jira Project Key'
        required: true
        default: 'MCP'
        type: string
      release_version:
        description: 'Release Version'
        required: true
        default: ""
        type: string
      release_env:
        description: 'Release environment'
        required: true
        default: ""
        type: string            
      application_name:
        description: 'Release environment'
        required: true
        default: ""
        type: string

      image_tag:
        description: 'Release environment'
        required: true
        default: "v1.1.1"
        type: string

jobs:
  initial_setting:
    outputs:
      repo: ${{ steps.set_env.outputs.repo }}
      release_branch: ${{ steps.set_env.outputs.release_branch }}
    name: Initial Setting
    runs-on: ubuntu-latest
    steps:
      - name: Repository List
        id: set_env
        run: |
          if [ ${{ inputs.jira_key }}  == "MCP" ]; then
            repo=smartparking-gitops
            release_branch=main
          elif [ ${{ inputs.jira_key }}  == "KCP" ]; then
            repo=keeper-gitops
            release_branch=main
          fi
          
          echo "repo=$repo" >> $GITHUB_OUTPUT
          echo "release_branch=$release_branch" >> $GITHUB_OUTPUT
          
  create-qa-jira-release:
    name: Create tag for new image (QA)
    if: ${{ inputs.release_env == 'QA' }}
    needs: [initial_setting]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: backend-sw-development-team4/${{ needs.initial_setting.outputs.repo }}
          ref: refs/heads/${{ needs.initial_setting.outputs.release_branch }}
          token: ${{ secrets.GH_MANAGEPACKAGE_TOKEN }}
          
      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.34.2/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Update version.json information
        if: ${{ inputs.application_name }} != ""
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '.["MainVersion"].["MoplServiceMainVersion"] = "${{ inputs.release_version }}"' qa_version.json     

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@master
        with:
          timeZone: UTC-9
          format: 'YYYY-MM-DD HH:mm:ss'

      - name: Update Release date to version.json information
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '.["ReleaseData"] = "${{ steps.time.outputs.time }}"' qa_version.json
            cat qa_version.json

      - name: Update BE server version.json information
        if: ${{ inputs.application_name != 'admin-frontend' }}
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '.["BackendVersion"].["${{ inputs.application_name }}"] = "${{ inputs.image_tag }}"' qa_version.json       
            echo "BE"
            cat qa_version.json

      - name: Update FE server version.json information
        if: ${{ inputs.application_name == 'admin-frontend' }}
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '.["FrontendVersion"].["${{ inputs.application_name }}"] = "${{ inputs.image_tag }}"' qa_version.json     
            echo "FE" 
            cat qa_version.json




      
