name: GitOps Release container image

on:
  workflow_call:
    inputs:
      repository_name:
        required: true
        description: "Name of repository"
        type: string
      repository_ref:
        required: false
        description: "Ref value of repository"
        type: string
        default: "main"
      image_name:
        required: true
        description: "Name of container registry and image"
        type: string
      image_tag:
        required: true
        description: "Tag of image"
        type: string
      application_name:
        required: false
        description: "Name of actual application"
        type: string
        default: ""
      environment_name:
        required: false
        description: "Environment name for tagging"
        type: string
        default: "dev"
      version_file_path:
        required: false
        description: "Path to the yaml file described all version of application"
        type: string
        default: "qa_version.yaml"
      region:
        required: false
        description: "aws region"
        type: string
        default: "ap-northeast-2"
      version_json_file_path:
        required: false
        description: "Path to the yaml file described all version of application"
        type: string
        default: "qa_version.json"
      mopl_qa_aws_accountid:
        required: false
        description: "mopl qa aws account id"
        type: string
        default: "852637827699"
      cloudfront_distribution_id:
        required: false
        description: "cloudfront_distribution_id"
        type: string
        default: "EXPTNFYJG8CR8"

    secrets:
      GH_MANAGEPACKAGE_TOKEN:
        required: false
        description: "If not provided, the repo creds will be used."

permissions: write-all

jobs:
  gitops-release:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment_name }}
    name: GitOps Release
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout state repo
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository_name }}
          path: ./gitops
          ref: ${{ inputs.repository_ref }}
          token: ${{ secrets.GH_MANAGEPACKAGE_TOKEN }}

      - name: Update image name and tag
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '
              .images[0].newName = "${{ inputs.image_name }}" |
              .images[0].newTag = "${{ inputs.image_tag }}"
            ' ./gitops/${{ inputs.application_name }}/env/${{ vars.ENV }}/kustomization.yaml

      - name: Update version information
        if: ${{ inputs.application_name }} != ""
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '.${{ inputs.application_name }}.image-tag = "${{ inputs.image_tag }}"' ./gitops/${{ inputs.version_file_path }}

      - name: Update BE server version.json information
        if: ${{ inputs.application_name != 'admin-frontend' && inputs.application_name != 'mopl-admin' }}
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '.["BackendVersion"].["${{ inputs.application_name }}"] = "${{ inputs.image_tag }}"' ./gitops/qa_version.json       

      - name: Update FN server version.json information
        if: ${{ inputs.application_name == 'admin-frontend' || inputs.application_name == 'mopl-admin' }}
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: |
            yq -i '.["FrontendVersion"].["${{ inputs.application_name }}"] = "${{ inputs.image_tag }}"' ./gitops/qa_version.json       


      # Login To HVC_Admin_Automation for Deploy
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.TEAM4_OIDC_ROLE }}
          role-session-name: GitHub-Actions-Assume
          aws-region: ap-northeast-2

      # Assume to Each Account as AWSControlTowerExecution
      - name: Push build artifact to S3 Bucket and invalidation CloudFront
        working-directory: ./gitops
        run: |
          # Assume Role using an Automation Key
          identity=$(aws sts assume-role --role-arn arn:aws:iam::${{ inputs.mopl_qa_aws_accountid }}:role/AWSControlTowerExecution --role-session-name AWS)
          export AWS_ACCESS_KEY_ID=$(echo "$identity" | grep -o '"AccessKeyId": "[^"]*' | awk -F'"' '{print $4}')
          export AWS_SECRET_ACCESS_KEY=$(echo "$identity" | grep -o '"SecretAccessKey": "[^"]*' | awk -F'"' '{print $4}')
          export AWS_SESSION_TOKEN=$(echo "$identity" | grep -o '"SessionToken": "[^"]*' | awk -F'"' '{print $4}')
          
          # Upload qa version file to S3 bucket.
          aws s3 cp ${{ inputs.version_json_file_path }} s3://mopl-common-p-an2/${{ inputs.version_json_file_path }} --region ${{ inputs.region }}

          # Setting CloudFront
          aws cloudfront create-invalidation --distribution-id ${{ inputs.cloudfront_distribution_id }} --paths "/*"

      - name: Commit changes
        working-directory: ./gitops
        run: |
          git config user.name "GitHub Actions Bot" && \
          git config user.email "<>" && \
          git add --all
          git commit -m "chore: update ${{ inputs.image_name }} image tag as ${{ inputs.image_tag }}" && \
          git pull origin main && \
          git push origin main

